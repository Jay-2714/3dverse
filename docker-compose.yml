services:
  app:
    build: .
    ports:
      - "4500:4500"
    volumes:
      - .:/app
      - /app/node_modules # Prevents overwriting node_modules with local files
    environment:
      - NODE_ENV=development
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_started
    networks:
      - 3dverse-network
   
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
      - HOST=0.0.0.0
      - PORT=8080
      - TOKEN_EXPIRY_HOURS=24
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - 3dverse-network
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 5s
      retries: 5

    networks:
      - 3dverse-network
    restart: unless-stopped

  

volumes:
  postgres_data:

networks:
  3dverse-network:
    driver: bridge